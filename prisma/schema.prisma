// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String?
  image         String?
  accounts      Account[]
  animeList     AnimeList[]
  mangaList     MangaList[]
  characterList CharacterList[]
  staffList     StaffList[]
}


model AnimeList {
  id      String @id @default(uuid())
  animeId String
  title   String
  image   String
  userId  String
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MangaList {
  id     String @id @default(uuid())
  mangaId String
  title  String
  image  String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CharacterList {
  id     String @id @default(uuid())
  characterId String
  title  String
  image  String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model StaffList {
  id     String @id @default(uuid())
  staffId String
  title  String
  image  String
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}
